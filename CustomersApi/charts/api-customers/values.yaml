replicaCount: 1

image:
  repository: mrjamiebowman/app-k8s-customer-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: dockercreds-mrjb
fullnameOverride: "api-customers"
nameOverride: ""

aadClientId: ""
aadClientSecret: ""
azAppConfigConnStr: ""
azAppConfigLabelFilter: "API-CUSTOMERS-DEV"
tenantId: ""
swaggerDocumentation: true

serviceAccount:
  create: false 
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels:
  app: "api-customers"
  version: "1.0.0"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  targetPort: 8080
  port: 80

istio:
  enabled: 1  
  gateway:
    name: api-customers-gateway
    hosts: api.mrjamiebowman.local

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# healthchecks:
#   startupProbe:
#     failureThreshold: 30
#     periodSeconds: 10
#   livenessProbe:
#     initialDelaySeconds: 0
#     periodSeconds: 10
#     failureThreshold: 3
#   readinessProbe:
#     successThreshold: 3

# startupProbe:
#   httpGet:
#     path: /hc/startup
#     port: http
#   failureThreshold: {{ .Values.healthchecks.startupProbe.failureThreshold }}
#   periodSeconds: {{ .Values.healthchecks.startupProbe.periodSeconds }}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}
